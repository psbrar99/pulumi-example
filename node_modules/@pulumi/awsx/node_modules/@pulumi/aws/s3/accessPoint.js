"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to manage an S3 Access Point.
 *
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/s3_access_point.html.markdown.
 */
class AccessPoint extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["bucket"] = state ? state.bucket : undefined;
            inputs["domainName"] = state ? state.domainName : undefined;
            inputs["hasPublicAccessPolicy"] = state ? state.hasPublicAccessPolicy : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networkOrigin"] = state ? state.networkOrigin : undefined;
            inputs["policy"] = state ? state.policy : undefined;
            inputs["publicAccessBlockConfiguration"] = state ? state.publicAccessBlockConfiguration : undefined;
            inputs["vpcConfiguration"] = state ? state.vpcConfiguration : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.bucket === undefined) {
                throw new Error("Missing required property 'bucket'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["bucket"] = args ? args.bucket : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["policy"] = args ? args.policy : undefined;
            inputs["publicAccessBlockConfiguration"] = args ? args.publicAccessBlockConfiguration : undefined;
            inputs["vpcConfiguration"] = args ? args.vpcConfiguration : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["domainName"] = undefined /*out*/;
            inputs["hasPublicAccessPolicy"] = undefined /*out*/;
            inputs["networkOrigin"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(AccessPoint.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing AccessPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new AccessPoint(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AccessPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessPoint.__pulumiType;
    }
}
exports.AccessPoint = AccessPoint;
/** @internal */
AccessPoint.__pulumiType = 'aws:s3/accessPoint:AccessPoint';
//# sourceMappingURL=accessPoint.js.map