"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * > **NOTE on `maxKeys`:** Retrieving very large numbers of keys can adversely affect this provider's performance.
 *
 * The bucket-objects data source returns keys (i.e., file names) and other metadata about objects in an S3 bucket.
 *
 * ## Example Usage
 *
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const myObjects = aws.s3.getBucketObjects({
 *     bucket: "ourcorp",
 * });
 * const objectInfo: aws.s3.GetBucketObjectResult[] = [];
 * for (let i = 0; i < myObjects.keys.length; i++) {
 *     objectInfo.push(aws.s3.getBucketObject({
 *         bucket: myObjects.bucket,
 *         key: myObjects.keys[i],
 *     }));
 * }
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/s3_bucket_objects.html.markdown.
 */
function getBucketObjects(args, opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("aws:s3/getBucketObjects:getBucketObjects", {
        "bucket": args.bucket,
        "delimiter": args.delimiter,
        "encodingType": args.encodingType,
        "fetchOwner": args.fetchOwner,
        "maxKeys": args.maxKeys,
        "prefix": args.prefix,
        "startAfter": args.startAfter,
    }, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getBucketObjects = getBucketObjects;
//# sourceMappingURL=getBucketObjects.js.map