import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a resource to manage the accepter's side of a Direct Connect hosted transit virtual interface.
 * This resource accepts ownership of a transit virtual interface created by another AWS account.
 *
 * > **NOTE:** AWS allows a Direct Connect hosted transit virtual interface to be deleted from either the allocator's or accepter's side. However, this provider only allows the Direct Connect hosted transit virtual interface to be deleted from the allocator's side by removing the corresponding `aws.directconnect.HostedTransitVirtualInterface` resource from your configuration. Removing a `aws.directconnect.HostedTransitVirtualInterfaceAcceptor` resource from your configuration will remove it from your statefile and management, **but will not delete the Direct Connect virtual interface.**
 *
 * ## Example Usage
 *
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const accepter = new aws.Provider("accepter", {});
 * const accepterCallerIdentity = aws.getCallerIdentity({provider: accepter});
 * // Accepter's side of the VIF.
 * const example = new aws.directconnect.Gateway("example", {
 *     amazonSideAsn: "64512",
 * }, {provider: accepter});
 * // Creator's side of the VIF
 * const creator = new aws.directconnect.HostedTransitVirtualInterface("creator", {
 *     addressFamily: "ipv4",
 *     bgpAsn: 65352,
 *     connectionId: "dxcon-zzzzzzzz",
 *     ownerAccountId: accepterCallerIdentity.accountId,
 *     vlan: 4094,
 * }, {dependsOn: [example]});
 * const accepterHostedTransitVirtualInterfaceAcceptor = new aws.directconnect.HostedTransitVirtualInterfaceAcceptor("accepter", {
 *     dxGatewayId: example.id,
 *     tags: {
 *         Side: "Accepter",
 *     },
 *     virtualInterfaceId: creator.id,
 * }, {provider: accepter});
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/dx_hosted_transit_virtual_interface_accepter.html.markdown.
 */
export declare class HostedTransitVirtualInterfaceAcceptor extends pulumi.CustomResource {
    /**
     * Get an existing HostedTransitVirtualInterfaceAcceptor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostedTransitVirtualInterfaceAcceptorState, opts?: pulumi.CustomResourceOptions): HostedTransitVirtualInterfaceAcceptor;
    /**
     * Returns true if the given object is an instance of HostedTransitVirtualInterfaceAcceptor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is HostedTransitVirtualInterfaceAcceptor;
    /**
     * The ARN of the virtual interface.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID of the Direct Connect gateway to which to connect the virtual interface.
     */
    readonly dxGatewayId: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The ID of the Direct Connect virtual interface to accept.
     */
    readonly virtualInterfaceId: pulumi.Output<string>;
    /**
     * Create a HostedTransitVirtualInterfaceAcceptor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostedTransitVirtualInterfaceAcceptorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering HostedTransitVirtualInterfaceAcceptor resources.
 */
export interface HostedTransitVirtualInterfaceAcceptorState {
    /**
     * The ARN of the virtual interface.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The ID of the Direct Connect gateway to which to connect the virtual interface.
     */
    readonly dxGatewayId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The ID of the Direct Connect virtual interface to accept.
     */
    readonly virtualInterfaceId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a HostedTransitVirtualInterfaceAcceptor resource.
 */
export interface HostedTransitVirtualInterfaceAcceptorArgs {
    /**
     * The ID of the Direct Connect gateway to which to connect the virtual interface.
     */
    readonly dxGatewayId: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The ID of the Direct Connect virtual interface to accept.
     */
    readonly virtualInterfaceId: pulumi.Input<string>;
}
