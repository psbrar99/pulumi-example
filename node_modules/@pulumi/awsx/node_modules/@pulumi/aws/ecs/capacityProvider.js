"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an ECS cluster capacity provider. More information can be found on the [ECS Developer Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-capacity-providers.html).
 *
 * > **NOTE:** The AWS API does not currently support deleting ECS cluster capacity providers. Removing this resource will only remove the state for it.
 *
 *
 * ## autoScalingGroupProvider
 *
 * The `autoScalingGroupProvider` block supports the following:
 *
 * * `autoScalingGroupArn` - (Required) - The Amazon Resource Name (ARN) of the associated auto scaling group.
 * * `managedScaling` - (Optional) - Nested argument defining the parameters of the auto scaling. Defined below.
 * * `managedTerminationProtection` - (Optional) - Enables or disables container-aware termination of instances in the auto scaling group when scale-in happens. Valid values are `ENABLED` and `DISABLED`.
 *
 * ## managedScaling
 *
 * The `managedScaling` block supports the following:
 *
 * * `maximumScalingStepSize` - (Optional) The maximum step adjustment size. A number between 1 and 10,000.
 * * `minimumScalingStepSize` - (Optional) The minimum step adjustment size. A number between 1 and 10,000.
 * * `status` - (Optional) Whether auto scaling is managed by ECS. Valid values are `ENABLED` and `DISABLED`.
 * * `targetCapacity` - (Optional) The target utilization for the capacity provider. A number between 1 and 100.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/ecs_capacity_provider.html.markdown.
 */
class CapacityProvider extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["autoScalingGroupProvider"] = state ? state.autoScalingGroupProvider : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.autoScalingGroupProvider === undefined) {
                throw new Error("Missing required property 'autoScalingGroupProvider'");
            }
            inputs["autoScalingGroupProvider"] = args ? args.autoScalingGroupProvider : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(CapacityProvider.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing CapacityProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new CapacityProvider(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CapacityProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CapacityProvider.__pulumiType;
    }
}
exports.CapacityProvider = CapacityProvider;
/** @internal */
CapacityProvider.__pulumiType = 'aws:ecs/capacityProvider:CapacityProvider';
//# sourceMappingURL=capacityProvider.js.map